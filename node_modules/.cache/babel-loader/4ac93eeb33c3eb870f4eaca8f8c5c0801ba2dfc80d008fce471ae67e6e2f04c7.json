{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n// Define a service using a base URL and expected endpoints\nexport const nanaApi = createApi({\n  reducerPath: 'studentApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:3001/student'\n  }),\n  tagTypes: ['Student'],\n  endpoints: builder => ({\n    getStudenList: builder.query({\n      query: () => ``,\n      providesTags: ['Student']\n    }),\n    addStudent: builder.mutation({\n      query: student => ({\n        url: '',\n        method: 'POST',\n        body: student\n      }),\n      invalidatesTags: ['Student']\n    }),\n    editStudent: builder.mutation({\n      query: _ref => {\n        let {\n          id1,\n          ...student\n        } = _ref;\n        return {\n          url: `/${id1}`,\n          method: 'PUT',\n          body: student\n        };\n      },\n      invalidatesTags: ['Student']\n    })\n  })\n});\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const {\n  useGetStudenListQuery,\n  useAddStudentMutation,\n  useEditStudentMutation\n} = nanaApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","nanaApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getStudenList","query","providesTags","addStudent","mutation","student","url","method","body","invalidatesTags","editStudent","_ref","id1","useGetStudenListQuery","useAddStudentMutation","useEditStudentMutation"],"sources":["/Users/hoangthang/Desktop/react/demo_web209_v2/src/toolkit/nana/nana.service.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { INana } from './nana.interface'\n\n\n// Define a service using a base URL and expected endpoints\nexport const nanaApi = createApi({\n    reducerPath: 'studentApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:3001/student' }),\n    tagTypes: ['Student'],\n    endpoints: (builder) => ({\n        getStudenList: builder.query({\n            query: () => ``,\n            providesTags: ['Student']\n        }),\n        addStudent: builder.mutation<INana[], INana>({\n            query: (student) => ({\n                url: '',\n                method: 'POST',\n                body: student,\n            }),\n            invalidatesTags: ['Student'],\n        }),\n        editStudent: builder.mutation<INana[], INana>({\n            query: ({id1, ...student}) => ({\n                url: `/${id1}`,\n                method: 'PUT',\n                body: student,\n            }),\n            invalidatesTags: ['Student'],\n        })\n    }),\n})\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const { useGetStudenListQuery, useAddStudentMutation, useEditStudentMutation } = nanaApi"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAIxE;AACA,OAAO,MAAMC,OAAO,GAAGF,SAAS,CAAC;EAC7BG,WAAW,EAAE,YAAY;EACzBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAgC,CAAC,CAAC;EACvEC,QAAQ,EAAE,CAAC,SAAS,CAAC;EACrBC,SAAS,EAAGC,OAAO,KAAM;IACrBC,aAAa,EAAED,OAAO,CAACE,KAAK,CAAC;MACzBA,KAAK,EAAEA,CAAA,KAAO,EAAC;MACfC,YAAY,EAAE,CAAC,SAAS;IAC5B,CAAC,CAAC;IACFC,UAAU,EAAEJ,OAAO,CAACK,QAAQ,CAAiB;MACzCH,KAAK,EAAGI,OAAO,KAAM;QACjBC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACV,CAAC,CAAC;MACFI,eAAe,EAAE,CAAC,SAAS;IAC/B,CAAC,CAAC;IACFC,WAAW,EAAEX,OAAO,CAACK,QAAQ,CAAiB;MAC1CH,KAAK,EAAEU,IAAA;QAAA,IAAC;UAACC,GAAG;UAAE,GAAGP;QAAO,CAAC,GAAAM,IAAA;QAAA,OAAM;UAC3BL,GAAG,EAAG,IAAGM,GAAI,EAAC;UACdL,MAAM,EAAE,KAAK;UACbC,IAAI,EAAEH;QACV,CAAC;MAAA,CAAC;MACFI,eAAe,EAAE,CAAC,SAAS;IAC/B,CAAC;EACL,CAAC;AACL,CAAC,CAAC;;AAEF;AACA;AACA,OAAO,MAAM;EAAEI,qBAAqB;EAAEC,qBAAqB;EAAEC;AAAuB,CAAC,GAAGtB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}