{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  students: []\n};\nconst studentSlice = createSlice({\n  name: 'student',\n  initialState: initialState,\n  reducers: {\n    loadStudentList: (state, action) => {\n      state.students = action.payload;\n      console.log('state.students', state.students);\n    },\n    addNewStudent: (state, action) => {\n      state.students.unshift(action.payload);\n    },\n    searchStudent: (state, action) => {\n      console.log(state.students);\n      const searchTerm = action.payload.toLowerCase();\n      state.students = initialState.students.filter(student => student.ten.toLowerCase().includes(searchTerm));\n\n      // state.students.unshift(action.payload)\n      // const orderExistingIndex = state.students.findIndex(student => student.ten === ac)\n    }\n  }\n});\n\nexport const {\n  loadStudentList,\n  addNewStudent,\n  searchStudent\n} = studentSlice.actions;\nexport default studentSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","students","studentSlice","name","reducers","loadStudentList","state","action","payload","console","log","addNewStudent","unshift","searchStudent","searchTerm","toLowerCase","filter","student","ten","includes","actions","reducer"],"sources":["/Users/hoangthang/Desktop/react/demo_web209_v2/src/toolkit/student/studentSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\nimport { IStudentState, IStudent } from \"./student.interface\";\n\nconst initialState: IStudentState = {\n    students: []\n}\n\nconst studentSlice = createSlice({\n    name: 'student',\n    initialState: initialState,\n    reducers: {\n        loadStudentList: (state, action: PayloadAction<IStudent[]>) => {\n                state.students = action.payload\n                console.log('state.students', state.students)\n            },\n        addNewStudent: (state, action: PayloadAction<IStudent>) => {\n            state.students.unshift(action.payload)\n        },\n        searchStudent: (state, action: PayloadAction<String>) => {\n            console.log(state.students);\n            const searchTerm = action.payload.toLowerCase();\n            state.students = initialState.students.filter(student => student.ten.toLowerCase().includes(searchTerm));\n            \n            // state.students.unshift(action.payload)\n            // const orderExistingIndex = state.students.findIndex(student => student.ten === ac)\n        \n        }\n    },\n})\n\nexport const { loadStudentList, addNewStudent,searchStudent } = studentSlice.actions;\nexport default studentSlice.reducer;"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAG7D,MAAMC,YAA2B,GAAG;EAChCC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,YAAY,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAE,SAAS;EACfH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACNC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAAiC,KAAK;MACvDD,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO;MAC/BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,KAAK,CAACL,QAAQ,CAAC;IACjD,CAAC;IACLU,aAAa,EAAEA,CAACL,KAAK,EAAEC,MAA+B,KAAK;MACvDD,KAAK,CAACL,QAAQ,CAACW,OAAO,CAACL,MAAM,CAACC,OAAO,CAAC;IAC1C,CAAC;IACDK,aAAa,EAAEA,CAACP,KAAK,EAAEC,MAA6B,KAAK;MACrDE,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACL,QAAQ,CAAC;MAC3B,MAAMa,UAAU,GAAGP,MAAM,CAACC,OAAO,CAACO,WAAW,CAAC,CAAC;MAC/CT,KAAK,CAACL,QAAQ,GAAGD,YAAY,CAACC,QAAQ,CAACe,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,UAAU,CAAC,CAAC;;MAExG;MACA;IAEJ;EACJ;AACJ,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAET,eAAe;EAAEM,aAAa;EAACE;AAAc,CAAC,GAAGX,YAAY,CAACkB,OAAO;AACpF,eAAelB,YAAY,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}