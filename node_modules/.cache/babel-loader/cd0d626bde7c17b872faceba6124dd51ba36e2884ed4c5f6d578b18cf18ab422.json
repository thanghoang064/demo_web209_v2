{"ast":null,"code":"export function CartAction(product) {\n  const action = {\n    type: 'add-cart',\n    payload: product\n  };\n  return dispatch => {\n    dispatch(action);\n  };\n}\n_c = CartAction;\nexport async function saveOrderAction(cart) {\n  try {\n    const response = await fetch('http://localhost:3001/order', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cart)\n    });\n    if (!response.ok) {\n      throw new Error('Error save orders');\n    }\n    const data = await response.json();\n\n    //\n    const action = {\n      type: 'clear-order-order'\n    };\n    return dispatch => {\n      dispatch(action);\n    };\n  } catch (error) {\n    console.log('Error:', error);\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"CartAction\");","map":{"version":3,"names":["CartAction","product","action","type","payload","dispatch","_c","saveOrderAction","cart","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","log","$RefreshReg$"],"sources":["/Users/hoangthang/Desktop/react/demo_web209_v2/src/store/order/action.ts"],"sourcesContent":["import { ISinhVien } from \"../sinhvien/action\";\nimport { IOrder } from \"./reduce\";\nimport { AddCartDispatchType, ClearOderStoreDispatchType } from \"./type\";\n\n\nexport interface AddCartAction {\n    type: 'add-cart', // phân biệt được action đấy là action gì (Thêm , Xóa , Sửa)\n    payload: ISinhVien// là dữ liệu được gửi đến cái tk lozz reducer để xử lý\n}\nexport interface IClearOrderStore {\n    type: 'clear-order-order'\n}\n\nexport function CartAction(product: ISinhVien) {\n\n    const action: AddCartAction = {\n        type: 'add-cart',\n        payload: product\n    }\n\n    return (dispatch: AddCartDispatchType) => {\n        dispatch(action)\n    }\n}\nexport async function saveOrderAction(cart: IOrder[]) {\n    try {\n        const response = await fetch('http://localhost:3001/order', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(cart)\n        });\n\n        if (!response.ok) {\n            throw new Error('Error save orders');\n        }\n\n        const data = await response.json();\n\n        //\n        const action: IClearOrderStore = {\n            type: 'clear-order-order',\n        }\n\n        return (dispatch: ClearOderStoreDispatchType) => {\n            dispatch(action)\n        }\n    } catch (error) {\n        console.log('Error:', error);\n    }\n\n\n}"],"mappings":"AAaA,OAAO,SAASA,UAAUA,CAACC,OAAkB,EAAE;EAE3C,MAAMC,MAAqB,GAAG;IAC1BC,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAEH;EACb,CAAC;EAED,OAAQI,QAA6B,IAAK;IACtCA,QAAQ,CAACH,MAAM,CAAC;EACpB,CAAC;AACL;AAACI,EAAA,GAVeN,UAAU;AAW1B,OAAO,eAAeO,eAAeA,CAACC,IAAc,EAAE;EAClD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACxDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;IACxC;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;;IAElC;IACA,MAAMjB,MAAwB,GAAG;MAC7BC,IAAI,EAAE;IACV,CAAC;IAED,OAAQE,QAAoC,IAAK;MAC7CA,QAAQ,CAACH,MAAM,CAAC;IACpB,CAAC;EACL,CAAC,CAAC,OAAOkB,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC;EAChC;AAGJ;AAAC,IAAAd,EAAA;AAAAiB,YAAA,CAAAjB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}