{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  nanas: []\n};\nlet initialStudentList = []; // Mảng lưu trữ danh sách ban đầu\n\nconst nanaSlice = createSlice({\n  name: 'ddddddddd',\n  initialState: initialState,\n  reducers: {\n    loadStudentList: (state, action) => {\n      state.nanas = action.payload;\n      console.log('state.students', state.nanas);\n    },\n    addNewStudent: (state, action) => {\n      state.nanas.unshift(action.payload);\n    },\n    searchStudent1: (state, action) => {\n      console.log(initialState.nanas);\n      const searchTerm = action.payload.toLowerCase();\n      state.nanas = initialStudentList.filter(student => student.ten.toLowerCase().includes(searchTerm));\n\n      // state.students.unshift(action.payload)\n      // const orderExistingIndex = state.students.findIndex(student => student.ten === ac)\n    }\n  }\n});\n\nexport const {\n  loadStudentList,\n  addNewStudent,\n  searchStudent1\n} = nanaSlice.actions;\nexport default nanaSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","nanas","initialStudentList","nanaSlice","name","reducers","loadStudentList","state","action","payload","console","log","addNewStudent","unshift","searchStudent1","searchTerm","toLowerCase","filter","student","ten","includes","actions","reducer"],"sources":["/Users/hoangthang/Desktop/react/demo_web209_v2/src/toolkit/nana/nanaSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\nimport { INana, INanaState } from \"./nana.interface\";\n\n\nconst initialState: INanaState = {\n    nanas: []\n}\nlet initialStudentList: INana[] = []; // Mảng lưu trữ danh sách ban đầu\n\nconst nanaSlice = createSlice({\n    name: 'ddddddddd',\n    initialState: initialState,\n    reducers: {\n        loadStudentList: (state, action: PayloadAction<INana[]>) => {\n                state.nanas = action.payload\n                console.log('state.students', state.nanas)\n            },\n        addNewStudent: (state, action: PayloadAction<INana>) => {\n            state.nanas.unshift(action.payload)\n        },\n        searchStudent1: (state, action: PayloadAction<String>) => {\n            \n            console.log(initialState.nanas);\n            const searchTerm = action.payload.toLowerCase();\n     \n            state.nanas = initialStudentList.filter(student => student.ten.toLowerCase().includes(searchTerm));\n            \n            // state.students.unshift(action.payload)\n            // const orderExistingIndex = state.students.findIndex(student => student.ten === ac)\n        \n        }\n    },\n})\n\nexport const { loadStudentList, addNewStudent,searchStudent1 } = nanaSlice.actions;\nexport default nanaSlice.reducer;"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAI7D,MAAMC,YAAwB,GAAG;EAC7BC,KAAK,EAAE;AACX,CAAC;AACD,IAAIC,kBAA2B,GAAG,EAAE,CAAC,CAAC;;AAEtC,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAE,WAAW;EACjBJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACNC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MACpDD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,KAAK,CAACN,KAAK,CAAC;IAC9C,CAAC;IACLW,aAAa,EAAEA,CAACL,KAAK,EAAEC,MAA4B,KAAK;MACpDD,KAAK,CAACN,KAAK,CAACY,OAAO,CAACL,MAAM,CAACC,OAAO,CAAC;IACvC,CAAC;IACDK,cAAc,EAAEA,CAACP,KAAK,EAAEC,MAA6B,KAAK;MAEtDE,OAAO,CAACC,GAAG,CAACX,YAAY,CAACC,KAAK,CAAC;MAC/B,MAAMc,UAAU,GAAGP,MAAM,CAACC,OAAO,CAACO,WAAW,CAAC,CAAC;MAE/CT,KAAK,CAACN,KAAK,GAAGC,kBAAkB,CAACe,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,UAAU,CAAC,CAAC;;MAElG;MACA;IAEJ;EACJ;AACJ,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAET,eAAe;EAAEM,aAAa;EAACE;AAAe,CAAC,GAAGX,SAAS,CAACkB,OAAO;AAClF,eAAelB,SAAS,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}