{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from './counter/counterSlice';\nimport studentReducer from './student/studentSlice';\nimport { studentApi } from './student/student.service';\nimport { nanaApi } from './nana/nana.service';\nimport nanaReducer from './nana/nanaSlice';\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    [studentApi.reducerPath]: studentApi.reducer,\n    [nanaApi.reducerPath]: nanaApi.reducer,\n    student: studentReducer,\n    nana: nanaReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(studentApi.middleware).concat(nanaApi.middleware)\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}","map":{"version":3,"names":["configureStore","counterReducer","studentReducer","studentApi","nanaApi","nanaReducer","store","reducer","counter","reducerPath","student","nana","middleware","getDefaultMiddleware","concat"],"sources":["/Users/hoangthang/Desktop/react/demo_web209_v2/src/toolkit/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport counterReducer from './counter/counterSlice'\nimport studentReducer from './student/studentSlice'\nimport { studentApi } from './student/student.service'\nimport { nanaApi } from './nana/nana.service'\nimport nanaReducer from './nana/nanaSlice'\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    [studentApi.reducerPath]: studentApi.reducer,\n    [nanaApi.reducerPath]: nanaApi.reducer,\n    student: studentReducer,\n    nana : nanaReducer\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(studentApi.middleware).concat(nanaApi.middleware),\n   \n\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,OAAO,MAAMC,KAAK,GAAGN,cAAc,CAAC;EAClCO,OAAO,EAAE;IACPC,OAAO,EAAEP,cAAc;IACvB,CAACE,UAAU,CAACM,WAAW,GAAGN,UAAU,CAACI,OAAO;IAC5C,CAACH,OAAO,CAACK,WAAW,GAAGL,OAAO,CAACG,OAAO;IACtCG,OAAO,EAAER,cAAc;IACvBS,IAAI,EAAGN;EACT,CAAC;EACDO,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACX,UAAU,CAACS,UAAU,CAAC,CAACE,MAAM,CAACV,OAAO,CAACQ,UAAU;AAGlF,CAAC,CAAC;;AAEF;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}