{"ast":null,"code":"var _jsxFileName = \"/Users/hoangthang/Desktop/react/demo/src/components/Login.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const handleEmail = () => {\n    if (!email || email.length === 0) {\n      setErrors(prevErrors => [...prevErrors, \"Email is required\"]);\n    } else if (email.length < 6) {\n      setErrors(prevErrors => [...prevErrors, \"Email must be at least 6 characters\"]);\n    } else {\n      setErrors([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.nameForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleEmail,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"zH0CKJkyw7v1tUbHylvvEk93C3Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","props","_s","email","setEmail","errors","setErrors","handleEmail","length","prevErrors","children","nameForm","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","event","target","onClick","map","error","index","_c","$RefreshReg$"],"sources":["/Users/hoangthang/Desktop/react/demo/src/components/Login.tsx"],"sourcesContent":["import { FC, useState } from \"react\";\n\ninterface IProps {\n  nameForm?: string;\n}\n\nconst Login: FC<IProps> = (props: IProps) => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const handleEmail = () => {\n    if (!email || email.length === 0) {\n      setErrors((prevErrors) => [...prevErrors, \"Email is required\"]);\n    } else if (email.length < 6) {\n      setErrors((prevErrors) => [...prevErrors, \"Email must be at least 6 characters\"]);\n    } else {\n      setErrors([]);\n    }\n  };\n\n  return (\n    <>\n      <h1>{props.nameForm}</h1>\n      <form>\n        <label>\n          Email:{\" \"}\n          <input type=\"text\" value={email} onChange={(event) => setEmail(event.target.value)} />\n        </label>\n        <button type=\"button\" onClick={handleEmail}>\n          Submit\n        </button>\n        {errors.length > 0 && (\n          <ul>\n            {errors.map((error, index) => (\n              <li key={index}>{error}</li>\n            ))}\n          </ul>\n        )}\n      </form>\n    </>\n  );\n};\n\nexport default Login;"],"mappings":";;AAAA,SAAaA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAMrC,MAAMC,KAAiB,GAAIC,KAAa,IAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAW,EAAE,CAAC;EAElD,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACJ,KAAK,IAAIA,KAAK,CAACK,MAAM,KAAK,CAAC,EAAE;MAChCF,SAAS,CAAEG,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAE,mBAAmB,CAAC,CAAC;IACjE,CAAC,MAAM,IAAIN,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;MAC3BF,SAAS,CAAEG,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAE,qCAAqC,CAAC,CAAC;IACnF,CAAC,MAAM;MACLH,SAAS,CAAC,EAAE,CAAC;IACf;EACF,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAKT,KAAK,CAACU;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBlB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,GAAO,QACC,EAAC,GAAG,eACVb,OAAA;UAAOmB,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEd,KAAM;UAACe,QAAQ,EAAGC,KAAK,IAAKf,QAAQ,CAACe,KAAK,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CAAC,eACRlB,OAAA;QAAQmB,IAAI,EAAC,QAAQ;QAACK,OAAO,EAAEd,WAAY;QAAAG,QAAA,EAAC;MAE5C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRV,MAAM,CAACG,MAAM,GAAG,CAAC,iBAChBX,OAAA;QAAAa,QAAA,EACGL,MAAM,CAACiB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvB3B,OAAA;UAAAa,QAAA,EAAiBa;QAAK,GAAbC,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACP,CAAC;AAEP,CAAC;AAACb,EAAA,CAnCIF,KAAiB;AAAAyB,EAAA,GAAjBzB,KAAiB;AAqCvB,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}