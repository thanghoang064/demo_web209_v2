{"ast":null,"code":"var _jsxFileName = \"/Users/hoangthang/Desktop/react/demo/src/components/Login.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const handleEmail = () => {\n    let newErrors = [];\n    if (!email || email.length === 0) {\n      newErrors.push(\"Email không được để trống\");\n    } else if (email.length < 6) {\n      newErrors.push(\"Email phải có ít nhất 6 ký tự\");\n    }\n    setErrors(prevErrors => {\n      const uniqueErrors = new Set([...prevErrors, ...newErrors]);\n      return Array.from(uniqueErrors);\n    }); // sử hạng hàm set để lọc những phần tử trùng nhau trong mảng\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.nameForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleEmail,\n        children: \"G\\u1EEDi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"zH0CKJkyw7v1tUbHylvvEk93C3Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","props","_s","email","setEmail","errors","setErrors","handleEmail","newErrors","length","push","prevErrors","uniqueErrors","Set","Array","from","children","nameForm","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","event","target","onClick","map","error","index","_c","$RefreshReg$"],"sources":["/Users/hoangthang/Desktop/react/demo/src/components/Login.tsx"],"sourcesContent":["import { FC, useState } from \"react\";\n\ninterface IProps {\n  nameForm?: string;\n}\n\nconst Login: FC<IProps> = (props: IProps) => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const handleEmail = () => {\n    let newErrors: string[] = [];\n\n    if (!email || email.length === 0) {\n      newErrors.push(\"Email không được để trống\");\n    } else if (email.length < 6) {\n      newErrors.push(\"Email phải có ít nhất 6 ký tự\");\n    }\n\n    setErrors((prevErrors) => {\n        const uniqueErrors = new Set([...prevErrors, ...newErrors]);\n        return Array.from(uniqueErrors);\n      }); // sử hạng hàm set để lọc những phần tử trùng nhau trong mảng\n  };\n\n  return (\n    <>\n      <h1>{props.nameForm}</h1>\n      <form>\n        <label>\n          Email:{\" \"}\n          <input type=\"text\" value={email} onChange={(event) => setEmail(event.target.value)} />\n        </label>\n        <button type=\"button\" onClick={handleEmail}>\n          Gửi\n        </button>\n        {errors.length > 0 && (\n          <ul>\n            {errors.map((error, index) => (\n              <li key={index}>{error}</li>\n            ))}\n          </ul>\n        )}\n      </form>\n    </>\n  );\n};\n\nexport default Login;"],"mappings":";;AAAA,SAAaA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAMrC,MAAMC,KAAiB,GAAIC,KAAa,IAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAW,EAAE,CAAC;EAElD,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,SAAmB,GAAG,EAAE;IAE5B,IAAI,CAACL,KAAK,IAAIA,KAAK,CAACM,MAAM,KAAK,CAAC,EAAE;MAChCD,SAAS,CAACE,IAAI,CAAC,2BAA2B,CAAC;IAC7C,CAAC,MAAM,IAAIP,KAAK,CAACM,MAAM,GAAG,CAAC,EAAE;MAC3BD,SAAS,CAACE,IAAI,CAAC,+BAA+B,CAAC;IACjD;IAEAJ,SAAS,CAAEK,UAAU,IAAK;MACtB,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAGF,UAAU,EAAE,GAAGH,SAAS,CAAC,CAAC;MAC3D,OAAOM,KAAK,CAACC,IAAI,CAACH,YAAY,CAAC;IACjC,CAAC,CAAC,CAAC,CAAC;EACR,CAAC;;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAKf,KAAK,CAACgB;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBxB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,GAAO,QACC,EAAC,GAAG,eACVnB,OAAA;UAAOyB,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEpB,KAAM;UAACqB,QAAQ,EAAGC,KAAK,IAAKrB,QAAQ,CAACqB,KAAK,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CAAC,eACRxB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAACK,OAAO,EAAEpB,WAAY;QAAAS,QAAA,EAAC;MAE5C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRhB,MAAM,CAACI,MAAM,GAAG,CAAC,iBAChBZ,OAAA;QAAAmB,QAAA,EACGX,MAAM,CAACuB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBjC,OAAA;UAAAmB,QAAA,EAAiBa;QAAK,GAAbC,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACP,CAAC;AAEP,CAAC;AAACnB,EAAA,CAxCIF,KAAiB;AAAA+B,EAAA,GAAjB/B,KAAiB;AA0CvB,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}