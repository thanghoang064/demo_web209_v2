{"ast":null,"code":"const initialState = {\n  orders: []\n};\nconst orderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'add-cart':\n      const orderExistingIndex = state.orders.findIndex(order => order.productId === action.payload.id);\n      if (orderExistingIndex === -1) {\n        state = {\n          ...state,\n          orders: [{\n            productId: action.payload.id,\n            quantity: 1\n          }, ...state.orders]\n        };\n      } else {\n        state.orders[orderExistingIndex].quantity += 1;\n        state = {\n          ...state,\n          orders: state.orders\n        };\n      }\n      break;\n  }\n  return state;\n};\nexport default orderReducer;","map":{"version":3,"names":["initialState","orders","orderReducer","state","arguments","length","undefined","action","type","orderExistingIndex","findIndex","order","productId","payload","id","quantity"],"sources":["/Users/hoangthang/Desktop/react/demo_web209_v2/src/store/order/reduce.ts"],"sourcesContent":["import { AddCartAction } from \"./action\";\n\nexport interface IOrder {\n    productId: number;\n    quantity: number;\n  }\n\n  export interface IOrderState {\n    orders: IOrder[];\n  }\n  \n  const initialState: IOrderState = {\n    orders: [],\n  };\n  \n  \n\nconst orderReducer = (state :IOrderState =initialState, action:AddCartAction):IOrderState =>{\n    switch(action.type) {\n        case 'add-cart': \n      \n        const orderExistingIndex = state.orders.findIndex(order => order.productId === action.payload.id)\n      \n        if (orderExistingIndex === -1) {\n           \n           state = {\n                ...state,\n                orders: [{\n                  productId: action.payload.id,\n                  quantity: 1\n                },...state.orders]\n              \n           }   \n          \n        } else {\n         \n          state.orders[orderExistingIndex].quantity += 1;\n          state = {\n            ...state,\n            orders: state.orders\n          }   \n        }\n            \n        break;\n       \n    }\n    return state\n}\n\nexport default orderReducer;"],"mappings":"AAWE,MAAMA,YAAyB,GAAG;EAChCC,MAAM,EAAE;AACV,CAAC;AAIH,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAAuE;EAAA,IAAtEC,KAAkB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAEJ,YAAY;EAAA,IAAEO,MAAoB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACxE,QAAOC,MAAM,CAACC,IAAI;IACd,KAAK,UAAU;MAEf,MAAMC,kBAAkB,GAAGN,KAAK,CAACF,MAAM,CAACS,SAAS,CAACC,KAAK,IAAIA,KAAK,CAACC,SAAS,KAAKL,MAAM,CAACM,OAAO,CAACC,EAAE,CAAC;MAEjG,IAAIL,kBAAkB,KAAK,CAAC,CAAC,EAAE;QAE5BN,KAAK,GAAG;UACH,GAAGA,KAAK;UACRF,MAAM,EAAE,CAAC;YACPW,SAAS,EAAEL,MAAM,CAACM,OAAO,CAACC,EAAE;YAC5BC,QAAQ,EAAE;UACZ,CAAC,EAAC,GAAGZ,KAAK,CAACF,MAAM;QAEtB,CAAC;MAEJ,CAAC,MAAM;QAELE,KAAK,CAACF,MAAM,CAACQ,kBAAkB,CAAC,CAACM,QAAQ,IAAI,CAAC;QAC9CZ,KAAK,GAAG;UACN,GAAGA,KAAK;UACRF,MAAM,EAAEE,KAAK,CAACF;QAChB,CAAC;MACH;MAEA;EAEJ;EACA,OAAOE,KAAK;AAChB,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}