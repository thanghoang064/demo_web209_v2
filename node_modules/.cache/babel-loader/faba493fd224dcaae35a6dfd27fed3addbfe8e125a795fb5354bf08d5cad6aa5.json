{"ast":null,"code":"const initialState = {\n  orders: []\n};\nconst orderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'add-cart':\n      const orderExistingIndex = state.orders.findIndex(order => order.productId === action.payload.id);\n      if (orderExistingIndex === -1) {\n        state = {\n          ...state,\n          orders: [{\n            productId: action.payload.id,\n            quantity: 1,\n            price: action.payload.namsinh\n          }, ...state.orders]\n        };\n      } else {\n        state.orders[orderExistingIndex].quantity += 1;\n        state = {\n          ...state,\n          orders: state.orders\n        };\n      }\n      break;\n    case 'clear-order-order':\n      // state.orders = []\n      state = {\n        ...state,\n        orders: []\n      };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\nexport default orderReducer;","map":{"version":3,"names":["initialState","orders","orderReducer","state","arguments","length","undefined","action","type","orderExistingIndex","findIndex","order","productId","payload","id","quantity","price","namsinh"],"sources":["/Users/hoangthang/Desktop/react/demo_web209_v2/src/store/order/reduce.ts"],"sourcesContent":["import { AddCartAction, IClearOrderStore } from \"./action\";\n\nexport interface IOrder {\n  productId: number;\n  quantity: number;\n  price: number;\n}\n\nexport interface IOrderState {\n  orders: IOrder[];\n}\n\nconst initialState: IOrderState = {\n  orders: [],\n};\n\n\ntype OrderActions = AddCartAction | IClearOrderStore\n\n\nconst orderReducer = (state: IOrderState = initialState, action: OrderActions): IOrderState => {\n  switch (action.type) {\n    case 'add-cart':\n\n      const orderExistingIndex = state.orders.findIndex(order => order.productId === action.payload.id)\n\n      if (orderExistingIndex === -1) {\n\n        state = {\n          ...state,\n          orders: [{\n            productId: action.payload.id,\n            quantity: 1,\n            price: action.payload.namsinh\n          }, ...state.orders]\n\n        }\n\n      } else {\n        state.orders[orderExistingIndex].quantity += 1;\n        state = {\n          ...state,\n          orders: state.orders\n        }\n      }\n\n      break;\n\n    case 'clear-order-order':\n      // state.orders = []\n      state = {\n        ...state,\n        orders: []\n      }\n      break;\n    default:\n      break;\n  }\n  return state\n}\n\nexport default orderReducer;"],"mappings":"AAYA,MAAMA,YAAyB,GAAG;EAChCC,MAAM,EAAE;AACV,CAAC;AAMD,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAA0E;EAAA,IAAzEC,KAAkB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAoB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3E,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MAEb,MAAMC,kBAAkB,GAAGN,KAAK,CAACF,MAAM,CAACS,SAAS,CAACC,KAAK,IAAIA,KAAK,CAACC,SAAS,KAAKL,MAAM,CAACM,OAAO,CAACC,EAAE,CAAC;MAEjG,IAAIL,kBAAkB,KAAK,CAAC,CAAC,EAAE;QAE7BN,KAAK,GAAG;UACN,GAAGA,KAAK;UACRF,MAAM,EAAE,CAAC;YACPW,SAAS,EAAEL,MAAM,CAACM,OAAO,CAACC,EAAE;YAC5BC,QAAQ,EAAE,CAAC;YACXC,KAAK,EAAET,MAAM,CAACM,OAAO,CAACI;UACxB,CAAC,EAAE,GAAGd,KAAK,CAACF,MAAM;QAEpB,CAAC;MAEH,CAAC,MAAM;QACLE,KAAK,CAACF,MAAM,CAACQ,kBAAkB,CAAC,CAACM,QAAQ,IAAI,CAAC;QAC9CZ,KAAK,GAAG;UACN,GAAGA,KAAK;UACRF,MAAM,EAAEE,KAAK,CAACF;QAChB,CAAC;MACH;MAEA;IAEF,KAAK,mBAAmB;MACtB;MACAE,KAAK,GAAG;QACN,GAAGA,KAAK;QACRF,MAAM,EAAE;MACV,CAAC;MACD;IACF;MACE;EACJ;EACA,OAAOE,KAAK;AACd,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}