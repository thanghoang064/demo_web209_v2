{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  nanas: []\n};\nconst nanaSlice = createSlice({\n  name: 'ddddddddd',\n  initialState: initialState,\n  reducers: {\n    loadStudentList: (state, action) => {\n      state.nanas = action.payload;\n      console.log('state.students', state.nanas);\n    },\n    addNewStudent: (state, action) => {\n      state.nanas.unshift(action.payload);\n    },\n    searchStudent1: (state, action) => {\n      console.log(action.payload.toLowerCase());\n      console.log(state.nanas);\n      // const searchTerm = action.payload.toLowerCase();\n      // state.nanas = initialState.nanas.filter(student => student.ten.toLowerCase().includes(searchTerm));\n\n      // state.students.unshift(action.payload)\n      // const orderExistingIndex = state.students.findIndex(student => student.ten === ac)\n    }\n  }\n});\n\nexport const {\n  loadStudentList,\n  addNewStudent,\n  searchStudent1\n} = nanaSlice.actions;\nexport default nanaSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","nanas","nanaSlice","name","reducers","loadStudentList","state","action","payload","console","log","addNewStudent","unshift","searchStudent1","toLowerCase","actions","reducer"],"sources":["/Users/hoangthang/Desktop/react/demo_web209_v2/src/toolkit/nana/nanaSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\nimport { INana, INanaState } from \"./nana.interface\";\n\n\nconst initialState: INanaState = {\n    nanas: []\n}\n\nconst nanaSlice = createSlice({\n    name: 'ddddddddd',\n    initialState: initialState,\n    reducers: {\n        loadStudentList: (state, action: PayloadAction<INana[]>) => {\n                state.nanas = action.payload\n                console.log('state.students', state.nanas)\n            },\n        addNewStudent: (state, action: PayloadAction<INana>) => {\n            state.nanas.unshift(action.payload)\n        },\n        searchStudent1: (state, action: PayloadAction<String>) => {\n            console.log(action.payload.toLowerCase());\n            console.log(state.nanas);\n            // const searchTerm = action.payload.toLowerCase();\n            // state.nanas = initialState.nanas.filter(student => student.ten.toLowerCase().includes(searchTerm));\n            \n            // state.students.unshift(action.payload)\n            // const orderExistingIndex = state.students.findIndex(student => student.ten === ac)\n        \n        }\n    },\n})\n\nexport const { loadStudentList, addNewStudent,searchStudent1 } = nanaSlice.actions;\nexport default nanaSlice.reducer;"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAI7D,MAAMC,YAAwB,GAAG;EAC7BC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC1BI,IAAI,EAAE,WAAW;EACjBH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACNC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MACpDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;MAC5BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,KAAK,CAACL,KAAK,CAAC;IAC9C,CAAC;IACLU,aAAa,EAAEA,CAACL,KAAK,EAAEC,MAA4B,KAAK;MACpDD,KAAK,CAACL,KAAK,CAACW,OAAO,CAACL,MAAM,CAACC,OAAO,CAAC;IACvC,CAAC;IACDK,cAAc,EAAEA,CAACP,KAAK,EAAEC,MAA6B,KAAK;MACtDE,OAAO,CAACC,GAAG,CAACH,MAAM,CAACC,OAAO,CAACM,WAAW,CAAC,CAAC,CAAC;MACzCL,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACL,KAAK,CAAC;MACxB;MACA;;MAEA;MACA;IAEJ;EACJ;AACJ,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEI,eAAe;EAAEM,aAAa;EAACE;AAAe,CAAC,GAAGX,SAAS,CAACa,OAAO;AAClF,eAAeb,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}